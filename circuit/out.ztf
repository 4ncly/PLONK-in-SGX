# curve:            bn128
# constraint_count: 34
def main(private _0, private _9, _18) -> () {
	# _1, _2, _3, _4, _5, _6, _7, _8 = Bits(8)((1 * ~one) * (1 * _0))
	(1 * _1) * (1 * _1) == 1 * _1
	(1 * _2) * (1 * _2) == 1 * _2
	(1 * _3) * (1 * _3) == 1 * _3
	(1 * _4) * (1 * _4) == 1 * _4
	(1 * _5) * (1 * _5) == 1 * _5
	(1 * _6) * (1 * _6) == 1 * _6
	(1 * _7) * (1 * _7) == 1 * _7
	(1 * _8) * (1 * _8) == 1 * _8
	(1 * ~one) * (128 * _1 + 64 * _2 + 32 * _3 + 16 * _4 + 8 * _5 + 4 * _6 + 2 * _7 + 1 * _8) == 1 * _0
	# _10, _11, _12, _13, _14, _15, _16, _17 = Bits(8)((1 * ~one) * (1 * _9))
	(1 * _10) * (1 * _10) == 1 * _10
	(1 * _11) * (1 * _11) == 1 * _11
	(1 * _12) * (1 * _12) == 1 * _12
	(1 * _13) * (1 * _13) == 1 * _13
	(1 * _14) * (1 * _14) == 1 * _14
	(1 * _15) * (1 * _15) == 1 * _15
	(1 * _16) * (1 * _16) == 1 * _16
	(1 * _17) * (1 * _17) == 1 * _17
	(1 * ~one) * (128 * _10 + 64 * _11 + 32 * _12 + 16 * _13 + 8 * _14 + 4 * _15 + 2 * _16 + 1 * _17) == 1 * _9
	(1 * _18) * (1 * _18) == 1 * _18
	# _19, _20, _21, _22, _23, _24, _25, _26, _27 = Bits(9)((1 * ~one) * (256 * ~one + (-1) * _0 + 1 * _9))
	(1 * _19) * (1 * _19) == 1 * _19
	(1 * _20) * (1 * _20) == 1 * _20
	(1 * _21) * (1 * _21) == 1 * _21
	(1 * _22) * (1 * _22) == 1 * _22
	(1 * _23) * (1 * _23) == 1 * _23
	(1 * _24) * (1 * _24) == 1 * _24
	(1 * _25) * (1 * _25) == 1 * _25
	(1 * _26) * (1 * _26) == 1 * _26
	(1 * _27) * (1 * _27) == 1 * _27
	(1 * ~one) * (256 * _19 + 128 * _20 + 64 * _21 + 32 * _22 + 16 * _23 + 8 * _24 + 4 * _25 + 2 * _26 + 1 * _27) == 256 * ~one + (-1) * _0 + 1 * _9
	# _30, _31 = ConditionEq((1 * ~one) * ((-256) * ~one + 1 * _0 + (-1) * _9))
	((-256) * ~one + 1 * _0 + (-1) * _9) * (1 * _31) == 1 * _30
	(1 * ~one + (-1) * _30) * ((-256) * ~one + 1 * _0 + (-1) * _9) == 0
	(1 * ~one) * (0) == 1 * ~one + (-1) * _30
	# _32, _33 = ConditionEq((1 * ~one) * ((-1) * _0 + 1 * _9))
	((-1) * _0 + 1 * _9) * (1 * _33) == 1 * _32
	(1 * ~one + (-1) * _32) * ((-1) * _0 + 1 * _9) == 0
	return 
	return 
}
